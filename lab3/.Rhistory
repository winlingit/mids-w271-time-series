knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = "C:/Users/kctob/OneDrive/Documents/Berkeley/271/mids-w271-time-series/lab2")
library(car)
library(stargazer)
library(Hmisc)
library(effects)
library(astsa)
library(forecast)
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 120)  # ACF: seasonality
acf2(unemp.ts, 370)  # ACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 130)  # ACF gradual decay
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal spike after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 250)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal spike after 3 lags
#
# plot of transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal spike after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 250)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal spike after 3 lags
#
# plot of transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# EDA for automotive sales
auto = read.csv("TOTALNSA.csv")
head(auto); tail(auto)
auto.ts = ts(auto$TOTALNSA, start = c(1976, 1), frequency=12)
plot.ts(auto.ts, main = 'Monthly automotive sales, January 1976 - June 2017', ylab = 'Automotive sales (units)')
hist(auto.ts)
acf2(auto.ts, 130)
# log transform to stabilize variance
la = log(auto.ts)
acf2(la, 130)  # ACF gradual decay
# diff by 1 lag to remove monthly trend
dla = diff(la)
acf2(dla, 130)
# diff by 12 lags to remove seasonal trend
ddla = diff(dla, lag=12)
acf2(ddla, 250)
# plot transformed data
plot.ts(cbind(auto.ts,la,dla,ddla), main='Monthly automotive sales, January 1976 - June 2017')
### add EDA for auto sales
# EDA for automotive sales
auto = read.csv("TOTALNSA.csv")
head(auto); tail(auto)
auto.ts = ts(auto$TOTALNSA, start = c(1976, 1), frequency=12)
# plot raw data
plot.ts(auto.ts, main = 'Monthly automotive sales, January 1976 - June 2017', ylab = 'Automotive sales (units)')
acf2(auto.ts, 130)
# log transform to stabilize variance
la = log(auto.ts)
acf2(la, 130)
# diff by 1 lag to remove monthly trend
dla = diff(la)
acf2(dla, 130)
# diff by 12 lags to remove seasonal trend
ddla = diff(dla, lag=12)
acf2(ddla, 250)
# plot transformed data
plot.ts(cbind(auto.ts,la,dla,ddla), main='Monthly automotive sales, January 1976 - June 2017')
### add EDA for auto sales
# fit model on training set and run diagnostics
# split data into training and test sets
train = window(x, end=c(2015,12), frequency=12)
# fit model on training set and run diagnostics
# split data into training and test sets
train = window(unemp.ts, end=c(2015,12), frequency=12)
test = window(unemp.ts, start=c(2016,1), frequency=12)
# find seasonal AR, MA orders P, Q
for (P in 0:4) {
for(Q in 0:4) {
fit = Arima(train, order=c(0,1,0), seasonal=list(order=c(P,1,Q)), method='ML')
print(c(P,Q,fit$aic))
}
}
# best model seasonal orders: P = 2, Q = 3, AIC = 42.6
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
# split data into training and test sets
unemp.train = window(unemp.ts, start = c(1948, 1), end=c(2015,12), frequency=12)
unemp.test = window(unemp.ts, start=c(2016,1), frequency=12)
# plot raw data
plot.ts(unemp.train, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.train, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.train)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal spike after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 250)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal spike after 3 lags
# plot transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
# plot raw data
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 13)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal trend after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 250)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal trend after 3 lags
# plot transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
# plot raw data
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 13)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 13)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal trend after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 250)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal trend after 3 lags
# plot transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
# plot raw data
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 13)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 13)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal trend after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 130)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal trend after 3 lags
# plot transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
# 1. EDA for unemployment rate
unemp = read.csv("UNRATENSA.csv")
head(unemp); tail(unemp)
unemp.ts = ts(unemp$UNRATENSA, start = c(1948, 1), frequency=12)
# plot raw data
plot.ts(unemp.ts, main = 'Monthly unemployment rate, January 1948 - June 2017', ylab = 'Unemployment rate (%)')
acf2(unemp.ts, 130)  # ACF: trend, PACF: seasonality
### 2. transform data
# log transform to stabilize variance
lu = log(unemp.ts)
acf2(lu, 130)
# diff by 1 lag to remove monthly trend
dlu = diff(lu)
acf2(dlu, 130)  # ACF: seasonal spike, PACF: cutoff in seasonal trend after 3 lags
# diff by 12 lags to remove seasonal trend
ddlu = diff(dlu, lag=12)
acf2(ddlu, 130)  # ACF: cutoff after 1 lag, PACF: cutoff in seasonal trend after 3 lags
# plot transformed data
plot.ts(cbind(unemp.ts,lu,dlu,ddlu), main='Monthly unemployment rate, January 1948 - June 2017')
?Arima
?sarima
# find AR, MA orders p, q
# try models w/ max of 3 non-seasonal lags based on ACF, PACF
for (p in 0:3) {
for(q in 0:3) {
fit = Arima(train, order=c(p,1,q), seasonal=list(order=c(2,1,3)), method='CSS-ML', optim.method='BFGS')
print(c(p,q,fit$aic))
}
}
# find AR, MA orders p, q
# try models w/ max of 3 non-seasonal lags based on ACF, PACF
# for (p in 0:3) {
#         for(q in 0:3) {
#                 fit = Arima(train, order=c(p,1,q), seasonal=list(order=c(2,1,3)), method='CSS-ML', optim.method='BFGS')
#                 print(c(p,q,fit$aic))
#         }
# }
# best model orders: p = 1, Q = 2, AIC = -17.0
# ### modeling with astsa
for (p in 0:3) {
for(q in 0:3) {
fit = sarima(train, p,1,q, 2,1,3, 12)
print(c(p,q,fit$AIC))
}
}
# find AR, MA orders p, q
# try models w/ max of 3 non-seasonal lags based on ACF, PACF
# for (p in 0:3) {
#         for(q in 0:3) {
#                 fit = Arima(train, order=c(p,1,q), seasonal=list(order=c(2,1,3)), method='CSS-ML', optim.method='BFGS')
#                 print(c(p,q,fit$aic))
#         }
# }
# best model orders: p = 1, Q = 2, AIC = -17.0
# ### modeling with astsa
for (p in 0:3) {
for(q in 0:3) {
fit = sarima(train, p,1,q, 2,1,3, 12, details=F)
print(c(p,q,fit$AIC))
}
}
### 4. check candidate models for residuals ~ white noise
# SARIMA(1,1,2) (2,1,3)
fit1 = Arima(train, order=c(1,1,2), seasonal=list(order=c(2,1,3)), method='CSS-ML', optim.method='BFGS')
?forecast.Arima
### 4. check candidate models for residuals ~ white noise
# SARIMA(1,1,2) (2,1,3)
fit1 = Arima(train, order=c(1,1,2), seasonal=list(order=c(2,1,3)), method='CSS-ML', optim.method='BFGS')
hist(fit1$residuals)
acf2(fit1$residuals, 130)
